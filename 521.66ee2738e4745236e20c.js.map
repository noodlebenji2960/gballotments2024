{"version":3,"file":"521.66ee2738e4745236e20c.js","mappings":"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","sources":["webpack://gballotments2024/./src/components/Calender.js","webpack://gballotments2024/./src/pages/growingGuide.js","webpack://gballotments2024/./public/assets/plants/ sync ^\\.\\/.*\\.jpg$","webpack://gballotments2024/./public/assets/plants/ sync nonrecursive \\.(json)$"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Calendar = (props) => {\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n\n  const months = Array.from({ length: 12 }, (_, month) => month);\n  const dropdownValueDetails = props.props.cropDataSliced.find((crop) => { if (crop.name == props.props.dropdownValue.name) { return true } })\n  const renderMonth = (month) => {\n    const firstDay = new Date(selectedYear, month, 1).getDay();\n    const daysInMonth = new Date(selectedYear, month + 1, 0).getDate();\n\n    const isInPlanting = (day, month) => {\n      let plantingSeason = dropdownValueDetails.plantingSeasons\n\n      if (plantingSeason.start !== undefined && plantingSeason.ends !== undefined) {\n        if ((plantingSeason.start.slice(0, 2) == day + 1 && plantingSeason.start.slice(3) == month + 1)) {\n          return \"first\"\n        } else if (plantingSeason.ends.slice(0, 2) == day && plantingSeason.ends.slice(3) == month + 1) {\n          return \"last\"\n        } else if ((plantingSeason.start.slice(3) < month + 1) && (plantingSeason.ends.slice(3) > month + 1)) {\n          return true\n        } else if (plantingSeason.start.slice(0, 2) < day + 1 && plantingSeason.start.slice(3) == month + 1) {\n          return true\n        } else if (plantingSeason.ends.slice(0, 2) > day && plantingSeason.ends.slice(3) == month + 1) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return\n      }\n    }\n\n    const isInHarvest = (day, month) => {\n      let harvest = dropdownValueDetails.harvest\n      if (harvest !== undefined) {\n        if ((harvest.start.slice(0, 2) == day + 1 && harvest.start.slice(3) == month + 1)) {\n          return \"first\"\n        } else if (harvest.ends.slice(0, 2) == day && harvest.ends.slice(3) == month + 1) {\n          return \"last\"\n        } else if ((harvest.start.slice(3) < month + 1) && (harvest.ends.slice(3) > month + 1)) {\n          return true\n        } else if (harvest.start.slice(0, 2) < day + 1 && harvest.start.slice(3) == month + 1) {\n          return true\n        } else if (harvest.ends.slice(0, 2) > day && harvest.ends.slice(3) == month + 1) {\n          return true\n        } else {\n          return false\n        }\n      }\n    }\n\n    const d = new Date();\n    let currentMonth = d.getMonth();\n    let currentDay = d.getDate()\n\n    return (\n      <div key={month} className=\"yearly-calendar-month\" style={month == currentMonth ? {\n        background: \"rgb(142, 168, 81, 0.5)\"\n      } : {}}>\n        <h3 style={month == currentMonth ? {\n          fontWeight: \"600\"\n        } : {}}>\n          {new Date(selectedYear, month).toLocaleDateString('en-US', { month: 'long' })}\n        </h3>\n        <div className=\"yearly-calendar-grid\">\n          <div className=\"yearly-calendar-dayName\">S</div>\n          <div className=\"yearly-calendar-dayName\">M</div>\n          <div className=\"yearly-calendar-dayName\">T</div>\n          <div className=\"yearly-calendar-dayName\">W</div>\n          <div className=\"yearly-calendar-dayName\">T</div>\n          <div className=\"yearly-calendar-dayName\">F</div>\n          <div className=\"yearly-calendar-dayName\">S</div>\n          {[...Array(firstDay)].map((_, index) =>\n            <div\n              key={`empty-${index}`}\n              className=\"yearly-calendar-day empty\">\n            </div>\n          )}\n          {Array.from({ length: daysInMonth }, (_, day) => day + 1).map((day) => {\n            const inPlanting = isInPlanting(day, month)\n            const inHarvest = isInHarvest(day, month)\n\n            const className = () => {\n              if (inPlanting == true) {\n                return \"yearly-calendar-day inSeasonPlanting\"\n              } else if (inPlanting == \"first\") {\n                return \"yearly-calendar-day inSeasonPlanting inSeasonFirst\"\n              } else if (inPlanting == \"last\") {\n                return \"yearly-calendar-day inSeasonPlanting inSeasonLast\"\n              } else if (inHarvest == true) {\n                return \"yearly-calendar-day inSeasonHarvest\"\n              } else if (inHarvest == \"first\") {\n                return \"yearly-calendar-day inSeasonHarvest inSeasonFirst\"\n              } else if (inHarvest == \"last\") {\n                return \"yearly-calendar-day inSeasonHarvest inSeasonLast\"\n              } else {\n                return \"yearly-calendar-day\"\n              }\n            }\n\n            let title;\n            if (currentDay == day && currentMonth == month) {\n              title = \"Today\"\n            } else if (inPlanting == true) {\n              title = \"Planting\"\n            } else if (inHarvest == true) {\n              title = \"Harvest\"\n            } else {\n\n            }\n\n            return <div\n              key={`day-${day}`}\n              title={title}\n              style={(currentDay == day && currentMonth == month) ? {\n                background: \"rgb(142, 168, 81, 0.5)\"\n              } : {}}\n              className={className()}>\n              {day}\n            </div>\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"yearly-calendar\">\n      <div className=\"yearly-calendar-container\">\n        <span>\n          <span>\n            <div style={{\n              width: \"10px\",\n              height: \"10px\",\n              backgroundColor: \"rgb(49, 67, 60)\"\n            }} />\n            Planting: {dropdownValueDetails.plantingSeasons.start} - {dropdownValueDetails.plantingSeasons.ends} \n          </span>\n          <span>\n            <div style={{\n              width: \"10px\",\n              height: \"10px\",\n              backgroundColor: \"rgb(49, 67, 60)\"\n            }} />\n            Harvest: {dropdownValueDetails.harvest.start} - {dropdownValueDetails.harvest.ends}\n          </span>\n        </span>\n        {months.map((month) => renderMonth(month))}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;","import React, { useEffect, useState } from \"react\";\nimport Calendar from \"../components/Calender\";\nimport {Link} from \"react-router-dom\"\n\nconst importAll = (require) => {\n    return require.keys().map(require)\n}\n\nconst GrowingGuide = () => {\n    const cropData = importAll(require.context('../../public/assets/plants', false, /\\.(json)$/))\n    const cropDataSliced = cropData.slice(0, 18).concat(cropData.slice(19))\n    const cropsIndex = cropData.slice(18, 19)[0].plants\n    const [dropdownValue, setDropdownValue] = useState(cropsIndex[0])\n    const [dropdownValueDetails, setDropdownValueDetail] = useState(() => {\n        return cropDataSliced.find((data) => data.name == dropdownValue.name)\n    })\n\n    const JsonToTable = (data) => {\n        return data !== undefined && (\n            <table className=\"harvestHelper\">\n                <tbody>\n                    <tr>\n                        <th>Category</th>\n                        <th>Edible Parts</th>\n                        <th>Hardiness</th>\n                        <th>Harvest</th>\n                    </tr>\n                    <tr>\n                        <td>{data.data.cultivationCategory}</td>\n                        <td>{data.data.edibleParts.join(', ')}</td>\n                        <td>{`${data.data.hardinessZone.min} - ${data.data.hardinessZone.max}`}</td>\n                        <td>{data.data.harvest.duration.min}-{data.data.harvest.duration.max}{data.data.harvest.duration.unit}</td>\n                    </tr>\n                    <tr>\n                        <th>Soil Impact</th>\n                        <th>Species</th>\n                        <th>Sun</th>\n                        <th>Yield</th>\n                    </tr>\n                    <tr>\n                        <td>{data.data.soilImpact}</td>\n                        <td>{data.data.species}</td>\n                        <td>{data.data.sun.min}-{data.data.sun.max}</td>\n                        <td>{data.data.yield.value} gr*m²</td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    };\n\n    const img = require(`../../public/assets/plants/${dropdownValue.name}.jpg`)\n\n    useEffect(()=>{\n        document.getElementById(\"dropdown\").focus()\n    },[])\n\n    return (<>\n        <div className=\"vegetablePage\">\n            <h3>Growing Guide</h3>\n            <p>This secton serves suggestions on how you could organize a little plot of your own.</p>\n            <span className=\"harvestHelper\">\n                <span>\n                <select\n                    id=\"dropdown\"\n                    value={dropdownValue.name.slice(0, 1).toUpperCase() + dropdownValue.name.slice(1)}\n                    onChange={(e) => {\n                        setDropdownValue({ imgUrl: `/${e.target.value.toLowerCase()}.jpg`, name: e.target.value.toLowerCase() })\n                        setDropdownValueDetail(cropDataSliced.find((data) => data.name == e.target.value.toLowerCase()))\n                    }}>\n                    {cropsIndex.map((crop, index) => {\n                        return <option key={index}>\n                            {crop.name.slice(0, 1).toUpperCase() + crop.name.slice(1)}\n                        </option>\n                    })}\n                </select>\n                <span>\n                    <span>\n                        <img src={img && img} />\n                    </span>\n                        {dropdownValueDetails.description}\n                        <Link to={dropdownValueDetails.wiki}>{dropdownValueDetails.wiki}</Link>\n                    </span>\n                </span>\n                <span>\n                    <JsonToTable data={cropDataSliced.find((crop) => { if (crop.name == dropdownValue.name) { return true } })} />\n                    <Calendar props={{ dropdownValue: dropdownValue, cropsIndex: cropsIndex, cropDataSliced: cropDataSliced }} />\n                </span>\n            </span>\n        </div>\n    </>)\n}\n\nexport default GrowingGuide","var map = {\n\t\"./artichoke.jpg\": 9694,\n\t\"./asparagus.jpg\": 1609,\n\t\"./basil.jpg\": 9220,\n\t\"./beet.jpg\": 8457,\n\t\"./bell pepper.jpg\": 1359,\n\t\"./broccoli.jpg\": 4737,\n\t\"./brussel sprout.jpg\": 3515,\n\t\"./cabbage.jpg\": 9703,\n\t\"./carrot.jpg\": 6008,\n\t\"./cauliflower.jpg\": 9073,\n\t\"./celery.jpg\": 5880,\n\t\"./chili pepper.jpg\": 7693,\n\t\"./collard green.jpg\": 9759,\n\t\"./common bean.jpg\": 4778,\n\t\"./cucumber.jpg\": 8753,\n\t\"./eggplant.jpg\": 7089,\n\t\"./garlic.jpg\": 8364,\n\t\"./head lettuce.jpg\": 9251,\n\t\"./kale.jpg\": 5092,\n\t\"./leaf lettuce.jpg\": 6526,\n\t\"./leek.jpg\": 6024,\n\t\"./mustard.jpg\": 8732,\n\t\"./okra.jpg\": 2910,\n\t\"./onion.jpg\": 5183,\n\t\"./parsley.jpg\": 7590,\n\t\"./parsnip.jpg\": 762,\n\t\"./pea.jpg\": 7132,\n\t\"./pole pea.jpg\": 7942,\n\t\"./potato.jpg\": 918,\n\t\"./pumpkin.jpg\": 8449,\n\t\"./radish.jpg\": 1348,\n\t\"./rhubarb.jpg\": 7285,\n\t\"./shallot.jpg\": 7058,\n\t\"./spinach.jpg\": 6998,\n\t\"./squash.jpg\": 7414,\n\t\"./sweet corn.jpg\": 5030,\n\t\"./swiss chard.jpg\": 6116,\n\t\"./tomato.jpg\": 2397,\n\t\"./turnip.jpg\": 6196\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8217;","var map = {\n\t\"./artichoke.json\": 4426,\n\t\"./asparagus.json\": 5327,\n\t\"./basil.json\": 9422,\n\t\"./beet.json\": 4511,\n\t\"./bell pepper.json\": 2227,\n\t\"./broccoli.json\": 9621,\n\t\"./brussel sprout.json\": 7032,\n\t\"./cabbage.json\": 2058,\n\t\"./carrot.json\": 3496,\n\t\"./cauliflower.json\": 4403,\n\t\"./celery.json\": 5695,\n\t\"./chili pepper.json\": 8046,\n\t\"./collard green.json\": 6266,\n\t\"./common bean.json\": 9943,\n\t\"./cucumber.json\": 455,\n\t\"./eggplant.json\": 4108,\n\t\"./garlic.json\": 9558,\n\t\"./head lettuce.json\": 4890,\n\t\"./index.json\": 6696,\n\t\"./kale.json\": 2644,\n\t\"./leaf lettuce.json\": 4774,\n\t\"./leek.json\": 7647,\n\t\"./mustard.json\": 8104,\n\t\"./okra.json\": 8573,\n\t\"./onion.json\": 9482,\n\t\"./parsley.json\": 1193,\n\t\"./parsnip.json\": 6560,\n\t\"./pea.json\": 5080,\n\t\"./pole pea.json\": 1866,\n\t\"./potato.json\": 1314,\n\t\"./pumpkin.json\": 777,\n\t\"./radish.json\": 3944,\n\t\"./rhubarb.json\": 4022,\n\t\"./shallot.json\": 3494,\n\t\"./spinach.json\": 2725,\n\t\"./squash.json\": 6397,\n\t\"./sweet corn.json\": 856,\n\t\"./swiss chard.json\": 2990,\n\t\"./tomato.json\": 9612,\n\t\"./turnip.json\": 1910\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7785;"],"names":["props","_useState2","useState","Date","getFullYear","selectedYear","months","Array","from","length","_","month","dropdownValueDetails","cropDataSliced","find","crop","name","dropdownValue","renderMonth","firstDay","getDay","daysInMonth","getDate","d","currentMonth","getMonth","currentDay","React","key","className","style","background","fontWeight","toLocaleDateString","_toConsumableArray","map","index","concat","day","title","inPlanting","plantingSeason","plantingSeasons","undefined","start","ends","slice","isInPlanting","inHarvest","harvest","isInHarvest","width","height","backgroundColor","require","cropData","keys","cropsIndex","plants","_slicedToArray","setDropdownValue","_useState4","data","setDropdownValueDetail","JsonToTable","cultivationCategory","edibleParts","join","hardinessZone","min","max","duration","unit","soilImpact","species","sun","value","img","useEffect","document","getElementById","focus","id","toUpperCase","onChange","e","imgUrl","target","toLowerCase","src","description","Link","to","wiki","Calendar","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","Object","resolve","module","exports"],"sourceRoot":""}